name: ghost-dl
on:
  push:
    tags:
      - '*'
jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: ghost-dl.py
          mode: onefile

        # Both `${{ !contains('windows',matrix.os) }}` and `contains('windows',matrix.os) == false` didn't work, so just working around it
      - if: contains('macos',matrix.os)
        name: Rename Binary & Delete Build Directories (MacOS/Linux)
        run: mv build/ghost-dl.bin build/ghost-dl && ls build/ && rm -r build/*.build build/*.dist build/*.onefile-build
      - if: contains('ubuntu',matrix.os)
        name: Rename Binary & Delete Build Directories (MacOS/Linux)
        run: mv build/ghost-dl.bin build/ghost-dl && ls build/ && rm -r build/*.build build/*.dist build/*.onefile-build

      - if: contains('macos',matrix.os)
        name: Upload Artifacts (Linux/MacOS)
        uses: actions/upload-artifact@v4
        with:
          name: ghost-dl_${{ matrix.os }}_${{ github.ref_name }}
          path: build/ghost-dl
          include-hidden-files: true
      - if: contains('ubuntu',matrix.os)
        name: Upload Artifacts (Linux/MacOS)
        uses: actions/upload-artifact@v4
        with:
          name: ghost-dl_${{ matrix.os }}_${{ github.ref_name }}
          path: build/ghost-dl
          include-hidden-files: true
      - if: contains('windows',matrix.os)
        name: Upload Artifacts (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: ghost-dl_${{ matrix.os }}_${{ github.ref_name }}
          path: build/ghost-dl.exe
          include-hidden-files: true

      - if: contains('macos',matrix.os)
        name: Create Tar Archives (Linux/MacOS)
        run: tar --xz -cvf build/ghost-dl_${{ matrix.os}}.tar.xz build/ghost-dl
      - if: contains('ubuntu',matrix.os)
        name: Create Tar Archives (Linux/MacOS)
        run: tar --xz -cvf build/ghost-dl_${{ matrix.os}}.tar.xz build/ghost-dl
      - if: contains('windows',matrix.os)
        name: Create Tar Archives (Windows)
        run: tar --xz -cvf build/ghost-dl_${{ matrix.os}}.tar.xz build/ghost-dl.exe

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts: build/ghost-dl_${{ matrix.os }}.tar.xz
          replacesArtifacts: false
          name: ${{ github.ref_name }} - ghost_dl
          bodyFile: "RELEASE_BODY.md"
          allowUpdates: true
